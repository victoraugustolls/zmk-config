
//                               █         █    █            ▄▄▄▀▀▀▀▀▀▄▄▄        █▀▀▀▀▀▀▀▀▀▀█
//                               █        █     █          ▄▀            ▀▄      █          █
//                               █       █      █        ▄▀                ▀▄    █          █
//                               █      █       █        █                  █    █          █
//                               █     █        █       █                    █   █          █
//                               █    █         █       █                    █   █▄▄▄▄▄▄▄▄▄▄█
//                               █   █ █        █       █                    █   █      █
//                               █  █   █       █        █                  █    █       █
//                               █ █     █      █        ▀▄                ▄▀    █        █
//                               ██       █     █          ▀▄            ▄▀      █         █
//                               █         █    █▄▄▄▄▄▄▄▄    ▀▀▀▄▄▄▄▄▄▀▀▀        █          █
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

// Urob helpers
#include <zmk-helpers/key-labels/42.h>

/* Timeless homerow mods */
// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/ {
    combos {
      compatible = "zmk,combos";

       right_alt_right {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <19 21>;
            timeout-ms = <100>;
            layers = <0>;
        };

        right_alt_left {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <16 14>;
            timeout-ms = <100>;
            layers = <0>;
        };
    };

    behaviors {
      hml: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "Homerow Mods - Left Hand";
        #binding-cells = <2>;
        flavor = "balanced";
        require-prior-idle-ms = <150>;
        tapping-term-ms = <280>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_R THUMBS>;
        hold-trigger-on-release;
      };

      hmr: homerow_mods_right {
        compatible = "zmk,behavior-hold-tap";
        label = "Homerow Mods - Right Hand";
        #binding-cells = <2>;
        flavor = "balanced";
        require-prior-idle-ms = <150>;
        tapping-term-ms = <280>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_L THUMBS>;
        hold-trigger-on-release;
      };
    };

    keymap {
            compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
        &kp Q        &kp W        &kp E         &kp R          &kp T                     &kp Y    &kp U          &kp I          &kp O          &kp P
&trans  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHIFT F  &kp D                     &kp H    &hmr RSHIFT J  &hmr RCTRL K   &hmr LALT L    &hmr RGUI SEMICOLON  &trans
&trans  &kp Z        &kp X        &kp C         &kp V          &kp B     &trans  &trans  &kp N    &kp M          &kp COMMA      &kp PERIOD     &kp SLASH            &trans
                                  &kp ESCAPE   &kp SPACE     &kp RETURN  &trans  &trans  &kp TAB  &kp BACKSPACE  &kp LALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

                lower_layer {
 bindings = <
    &ext_power EP_TOG   &trans    &kp UP    &trans    &kp LBRC                       &kp RBRC  &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_PLUS
    &trans  &rgb_ug RGB_EFF    &kp LEFT  &kp DOWN  &kp RIGHT &kp LBKT                       &kp RBKT  &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MINUS &trans
    &trans    &trans    &kp PG_UP &kp CAPS  &kp PG_DN &kp LPAR  &trans     &trans    &kp RPAR  &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY &trans
                                  &trans    &trans    &trans    &trans     &trans    &kp DELETE &kp KP_N0 &trans
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };


                raise_layer {
 bindings = <
              &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp RA(U) &trans    &trans
    &kp RA(A) &trans    &kp RA(S) &trans    &trans    &trans                         &trans    &trans    &trans    &trans    &kp RA(O) &trans
    &trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans
                                  &mo ADJUST &trans   &trans    &trans     &trans    &trans    &trans    &trans
                        >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                adjust_layer {
 bindings = <
             &bt BT_CLR &trans    &trans    &trans    &trans                         &trans    &trans    &trans    &trans    &bt BT_CLR
    &trans   &bt BT_NXT &trans    &trans    &trans    &trans                         &trans    &trans    &trans    &bt BT_NXT &trans   &trans
    &trans   &bt BT_PRV &trans    &trans    &kp KP_N6 &trans    &trans     &trans    &bt BT_PRV &trans   &trans    &trans    &trans    &trans
                                  &trans    &trans    &trans    &trans     &trans    &trans    &trans    &trans
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
        };
};
